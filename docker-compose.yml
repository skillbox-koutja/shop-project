version: '3'
services:
    shop-nginx:
        build:
            context: ./shop/docker/development
            dockerfile: nginx.docker
        volumes:
            - ./shop:/app
        depends_on:
            - shop-php-fpm
        ports:
            - "8080:80"
    shop-php-fpm:
        build:
            context: ./shop/docker/development
            dockerfile: php-fpm.docker
        volumes:
            - ./shop:/app
        depends_on:
            - shop-postgres
            - shop-redis
            - shop-queue-redis
            - storage
            - mailer
    shop-php-cli:
        build:
            context: ./shop/docker/development
            dockerfile: php-cli.docker
        volumes:
            - ./shop:/app
            - composer:/root/.composer/cache
        depends_on:
            - shop-postgres
            - shop-redis
            - shop-queue-redis
            - storage
            - mailer
    shop-queue-worker:
        build:
            context: ./shop/docker/development
            dockerfile: php-cli.docker
        volumes:
            - ./shop:/app
            - composer:/root/.composer/cache
        depends_on:
            - shop-postgres
            - shop-redis
            - shop-queue-redis
            - storage
            - mailer
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && php bin/console messenger:consume async -vv"
    shop-node-watch:
        image: node:12.7-alpine
        volumes:
            - ./shop:/app
        working_dir: /app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && npm run watch"
    shop-node:
        image: node:12.7-alpine
        volumes:
            - ./shop:/app
        working_dir: /app
    shop-postgres:
        image: postgres:11.2-alpine
        volumes:
            - shop-postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        ports:
            - "54321:5432"
    shop-redis:
        image: redis:5.0-alpine
        volumes:
            - shop-redis:/data
        command:
            - 'redis-server'
            - '--databases 2'
            - '--save 900 1'
            - '--save 300 10'
            - '--save 60 10000'
            - '--requirepass secret'
    shop-queue-redis:
        image: redis:5.0-alpine
        volumes:
            - shop-queue-redis:/data

    storage:
        build:
            context: ./storage/docker/development
            dockerfile: nginx.docker
        volumes:
            - ./storage:/app
        ports:
            - "8081:80"
    storage-ftp:
        image: stilliard/pure-ftpd
        environment:
            FTP_USER_NAME: app
            FTP_USER_PASS: secret
            FTP_USER_HOME: /app
        volumes:
            - ./storage/public:/app

    mailer:
        image: mailhog/mailhog
        ports:
            - "8082:8025"

volumes:
    shop-postgres:
    shop-redis:
    shop-queue-redis:
    composer:
